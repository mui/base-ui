{
  "props": {
    "aria-labelledby": { "type": { "name": "string" } },
    "className": { "type": { "name": "union", "description": "func<br>&#124;&nbsp;string" } },
    "defaultValue": {
      "type": { "name": "union", "description": "Array&lt;number&gt;<br>&#124;&nbsp;number" }
    },
    "disabled": { "type": { "name": "bool" }, "default": "false" },
    "format": {
      "type": {
        "name": "union",
        "description": "Array&lt;{ compactDisplay?: 'long'<br>&#124;&nbsp;'short', currency?: string, currencyDisplay?: 'code'<br>&#124;&nbsp;'name'<br>&#124;&nbsp;'narrowSymbol'<br>&#124;&nbsp;'symbol', currencySign?: 'accounting'<br>&#124;&nbsp;'standard', localeMatcher?: 'best fit'<br>&#124;&nbsp;'lookup', maximumFractionDigits?: number, maximumSignificantDigits?: number, minimumFractionDigits?: number, minimumIntegerDigits?: number, minimumSignificantDigits?: number, notation?: 'compact'<br>&#124;&nbsp;'engineering'<br>&#124;&nbsp;'scientific'<br>&#124;&nbsp;'standard', numberingSystem?: string, signDisplay?: 'always'<br>&#124;&nbsp;'auto'<br>&#124;&nbsp;'exceptZero'<br>&#124;&nbsp;'never', style?: 'currency'<br>&#124;&nbsp;'decimal'<br>&#124;&nbsp;'percent'<br>&#124;&nbsp;'unit', unit?: string, unitDisplay?: 'long'<br>&#124;&nbsp;'narrow'<br>&#124;&nbsp;'short', useGrouping?: bool }&gt;<br>&#124;&nbsp;{ compactDisplay?: 'long'<br>&#124;&nbsp;'short', currency?: string, currencyDisplay?: 'code'<br>&#124;&nbsp;'name'<br>&#124;&nbsp;'narrowSymbol'<br>&#124;&nbsp;'symbol', currencySign?: 'accounting'<br>&#124;&nbsp;'standard', localeMatcher?: 'best fit'<br>&#124;&nbsp;'lookup', maximumFractionDigits?: number, maximumSignificantDigits?: number, minimumFractionDigits?: number, minimumIntegerDigits?: number, minimumSignificantDigits?: number, notation?: 'compact'<br>&#124;&nbsp;'engineering'<br>&#124;&nbsp;'scientific'<br>&#124;&nbsp;'standard', numberingSystem?: string, signDisplay?: 'always'<br>&#124;&nbsp;'auto'<br>&#124;&nbsp;'exceptZero'<br>&#124;&nbsp;'never', style?: 'currency'<br>&#124;&nbsp;'decimal'<br>&#124;&nbsp;'percent'<br>&#124;&nbsp;'unit', unit?: string, unitDisplay?: 'long'<br>&#124;&nbsp;'narrow'<br>&#124;&nbsp;'short', useGrouping?: bool }"
      }
    },
    "largeStep": { "type": { "name": "number" }, "default": "10" },
    "max": { "type": { "name": "number" }, "default": "100" },
    "min": { "type": { "name": "number" }, "default": "0" },
    "minStepsBetweenValues": { "type": { "name": "number" }, "default": "0" },
    "name": { "type": { "name": "string" } },
    "onValueChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: number | Array<number>, event: Event, activeThumbIndex: number) => void",
        "describedArgs": ["value", "event", "activeThumbIndex"]
      }
    },
    "onValueCommitted": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: number | Array<number>, event: Event) => void",
        "describedArgs": ["value", "event"]
      }
    },
    "orientation": {
      "type": { "name": "enum", "description": "'horizontal'<br>&#124;&nbsp;'vertical'" },
      "default": "'horizontal'"
    },
    "render": { "type": { "name": "union", "description": "element<br>&#124;&nbsp;func" } },
    "step": { "type": { "name": "number" }, "default": "1" },
    "value": {
      "type": { "name": "union", "description": "Array&lt;number&gt;<br>&#124;&nbsp;number" }
    }
  },
  "name": "SliderRoot",
  "imports": [
    "import { Slider } from '@base-ui-components/react/slider';\nconst SliderRoot = Slider.Root;"
  ],
  "classes": [],
  "spread": true,
  "themeDefaultProps": true,
  "muiName": "SliderRoot",
  "forwardsRefTo": "HTMLDivElement",
  "filename": "/packages/react/src/slider/root/SliderRoot.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/components/react-slider/\">Slider</a></li></ul>",
  "cssComponent": false
}
