{
  "componentDescription": "The popover positioner element.",
  "propDescriptions": {
    "alignment": {
      "description": "The alignment of the popover element to the anchor element along its cross axis."
    },
    "alignmentOffset": {
      "description": "The offset of the popover element along its alignment axis."
    },
    "anchor": { "description": "The element to which the popover element is anchored to." },
    "arrowPadding": {
      "description": "Determines the padding between the arrow and the popover edges. Useful when the popover element has rounded corners via <code>border-radius</code>."
    },
    "className": {
      "description": "Class names applied to the element or a function that returns them based on the component&#39;s state."
    },
    "collisionBoundary": {
      "description": "The boundary that the popover element should be constrained to."
    },
    "collisionPadding": {
      "description": "The padding between the popover element and the edges of the collision boundary to add whitespace between them to prevent them from touching."
    },
    "container": { "description": "The element the popover positioner element is appended to." },
    "hideWhenDetached": {
      "description": "Whether the popover element is hidden if it appears detached from its anchor element due to the anchor element being clipped (or hidden) from view."
    },
    "keepMounted": {
      "description": "Whether the popover remains mounted in the DOM while closed."
    },
    "positionMethod": {
      "description": "The CSS position strategy for positioning the popover element."
    },
    "render": { "description": "A function to customize rendering of the component." },
    "side": {
      "description": "The side of the anchor element that the popover element should be placed at."
    },
    "sideOffset": { "description": "The gap between the anchor element and the popover element." },
    "sticky": {
      "description": "Whether to allow the popover to remain stuck in view while the anchor element is scrolled out of view."
    }
  },
  "classDescriptions": {}
}
