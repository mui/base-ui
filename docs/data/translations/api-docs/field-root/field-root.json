{
  "componentDescription": "The foundation for building custom-styled fields.",
  "propDescriptions": {
    "className": {
      "description": "Class names applied to the element or a function that returns them based on the component&#39;s state."
    },
    "disabled": {
      "description": "Whether the field is disabled. Takes precedence over the <code>disabled</code> prop of the <code>Field.Control</code> component."
    },
    "invalid": { "description": "Determines if the field is forcefully marked as invalid." },
    "name": {
      "description": "The field&#39;s name. Takes precedence over the <code>name</code> prop of the <code>Field.Control</code> component."
    },
    "render": { "description": "A function to customize rendering of the component." },
    "validate": {
      "description": "Function to custom-validate the field&#39;s value. Return a string or array of strings with error messages if the value is invalid, or <code>null</code> if the value is valid. The function can also return a promise that resolves to a string, array of strings, or <code>null</code>."
    },
    "validationDebounceTime": {
      "description": "The debounce time in milliseconds for the <code>validate</code> function in <code>onChange</code> phase."
    },
    "validationMode": { "description": "Determines when validation should be triggered." }
  },
  "classDescriptions": {}
}
