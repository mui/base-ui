{
  "componentDescription": "The foundation for building custom-styled buttons.",
  "propDescriptions": {
    "action": {
      "description": "A ref for imperative actions. It currently only supports <code>focusVisible()</code> action."
    },
    "disabled": { "description": "If <code>true</code>, the component is disabled." },
    "focusableWhenDisabled": {
      "description": "If <code>true</code>, allows a disabled button to receive focus."
    },
    "rootElementName": {
      "description": "The HTML element that is ultimately rendered, for example &#39;button&#39; or &#39;a&#39;"
    },
    "slotProps": { "description": "The props used for each slot inside the Button." },
    "slots": {
      "description": "The components used for each slot inside the Button. Either a string to use a HTML element or a component."
    }
  },
  "classDescriptions": {
    "active": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root <code>button</code> element",
      "conditions": "<code>active={true}</code>"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root <code>button</code> element",
      "conditions": "<code>disabled={true}</code>"
    },
    "focusVisible": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root <code>button</code> element",
      "conditions": "<code>focusVisible={true}</code>"
    }
  },
  "slotDescriptions": { "root": "The component that renders the root." }
}
