{
  "componentDescription": "The tooltip popup element.",
  "propDescriptions": {
    "alignment": {
      "description": "The alignment of the tooltip element to the anchor element along its cross axis."
    },
    "alignmentOffset": {
      "description": "The offset of the tooltip element along its alignment axis."
    },
    "anchor": {
      "description": "The anchor element to which the tooltip content will be placed at."
    },
    "arrowPadding": {
      "description": "Determines the padding between the arrow and the tooltip content. Useful when the tooltip has rounded corners via <code>border-radius</code>."
    },
    "className": {
      "description": "Class names applied to the element or a function that returns them based on the component&#39;s state."
    },
    "collisionBoundary": {
      "description": "The boundary that the tooltip element should be constrained to."
    },
    "collisionPadding": { "description": "The padding of the collision boundary." },
    "container": {
      "description": "The container element to which the tooltip content will be appended to."
    },
    "followCursorAxis": {
      "description": "Determines which axis the tooltip should follow the cursor on."
    },
    "hideWhenDetached": {
      "description": "If <code>true</code>, the tooltip will be hidden if it is detached from its anchor element due to differing clipping contexts."
    },
    "keepMounted": {
      "description": "If <code>true</code>, the tooltip content will be kept mounted in the DOM."
    },
    "render": { "description": "A function to customize rendering of the component." },
    "renderRoot": { "description": "Customize the positioned root element." },
    "side": {
      "description": "The side of the anchor element that the tooltip element should align to."
    },
    "sideOffset": { "description": "The gap between the anchor element and the tooltip element." },
    "sticky": {
      "description": "If <code>true</code>, allow the tooltip to remain in stuck view while the anchor element is scrolled out of view."
    }
  },
  "classDescriptions": {}
}
