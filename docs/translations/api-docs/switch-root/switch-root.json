{
  "componentDescription": "The foundation for building custom-styled switches.",
  "propDescriptions": {
    "checked": { "description": "If <code>true</code>, the switch is checked." },
    "className": {
      "description": "Class names applied to the element or a function that returns them based on the component&#39;s state."
    },
    "defaultChecked": {
      "description": "The default checked state. Use when the component is not controlled."
    },
    "disabled": {
      "description": "If <code>true</code>, the component is disabled and can&#39;t be interacted with."
    },
    "inputRef": { "description": "Ref to the underlying input element." },
    "name": { "description": "Name of the underlying input element." },
    "onChange": {
      "description": "Callback fired when the state is changed.",
      "typeDescriptions": {
        "event": "The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."
      }
    },
    "readOnly": {
      "description": "If <code>true</code>, the component is read-only. Functionally, this is equivalent to being disabled, but the assistive technologies will announce this differently."
    },
    "render": { "description": "A function to customize rendering of the component." },
    "required": {
      "description": "If <code>true</code>, the switch must be checked for the browser validation to pass."
    }
  },
  "classDescriptions": {}
}
