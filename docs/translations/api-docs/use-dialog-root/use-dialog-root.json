{
  "hookDescription": "",
  "parametersDescriptions": {
    "animated": {
      "description": "If <code>true</code>, the dialog supports CSS-based animations and transitions. It is kept in the DOM until the animation completes."
    },
    "defaultOpen": {
      "description": "Determines whether the dialog is initally open. This is an uncontrolled equivalent of the <code>open</code> prop."
    },
    "dismissible": {
      "description": "Determines whether the dialog should close when clicking outside of it."
    },
    "modal": { "description": "Determines whether the dialog is modal." },
    "onNestedDialogClose": { "description": "Callback to invoke when a nested dialog is closed." },
    "onNestedDialogOpen": { "description": "Callback to invoke when a nested dialog is opened." },
    "onOpenChange": {
      "description": "Callback invoked when the dialog is being opened or closed."
    },
    "open": { "description": "Determines whether the dialog is open." }
  },
  "returnValueDescriptions": {
    "descriptionElementId": {
      "description": "The id of the description element associated with the dialog."
    },
    "modal": { "description": "Determines if the dialog is modal." },
    "nestedOpenDialogCount": { "description": "Number of nested dialogs that are currently open." },
    "onNestedDialogClose": { "description": "Callback to invoke when a nested dialog is closed." },
    "onNestedDialogOpen": { "description": "Callback to invoke when a nested dialog is opened." },
    "onOpenChange": {
      "description": "Callback to fire when the dialog is requested to be opened or closed."
    },
    "open": { "description": "Determines if the dialog is open." },
    "popupElementId": { "description": "The id of the popup element." },
    "setBackdropPresent": {
      "description": "Callback to notify the dialog that the backdrop is present."
    },
    "setDescriptionElementId": {
      "description": "Callback to set the id of the description element associated with the dialog."
    },
    "setPopupElementId": { "description": "Callback to set the id of the popup element." },
    "setTitleElementId": { "description": "Callback to set the id of the title element." },
    "titleElementId": { "description": "The id of the title element associated with the dialog." }
  }
}
