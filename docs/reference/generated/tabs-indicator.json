{
  "name": "TabsIndicator",
  "description": "A visual indicator that can be styled to match the position of the currently active tab.\nRenders a `<span>` element.",
  "props": {
    "className": {
      "type": "string | (state) => string",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    },
    "renderBeforeHydration": {
      "type": "boolean",
      "default": "false",
      "description": "Whether to render itself before React hydrates.\nThis minimizes the time that the indicator isn’t visible after server-side rendering."
    }
  },
  "cssVariables": {
    "--active-tab-bottom": {
      "description": "Indicates the distance on the bottom side from the parent's container if the tab is active.",
      "type": "number"
    },
    "--active-tab-height": {
      "description": "Indicates the width of the tab if it is active.",
      "type": "number"
    },
    "--active-tab-left": {
      "description": "Indicates the distance on the left side from the parent's container if the tab is active.",
      "type": "number"
    },
    "--active-tab-right": {
      "description": "Indicates the distance on the right side from the parent's container if the tab is active.",
      "type": "number"
    },
    "--active-tab-top": {
      "description": "Indicates the distance on the top side from the parent's container if the tab is active.",
      "type": "number"
    },
    "--active-tab-width": {
      "description": "Indicates the width of the tab if it is active.",
      "type": "number"
    }
  }
}
