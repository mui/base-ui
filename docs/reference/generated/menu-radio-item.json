{
  "name": "MenuRadioItem",
  "description": "A menu item that works like a radio button in a given group.\nRenders a `<div>` element.",
  "props": {
    "label": {
      "type": "string",
      "description": "Overrides the text label to use when the item is matched during keyboard text navigation.",
      "detailedType": "string | undefined"
    },
    "value": {
      "type": "any",
      "required": true,
      "description": "Value of the radio item.\nThis is the value that will be set in the Menu.RadioGroup when the item is selected."
    },
    "onClick": {
      "type": "MouseEventHandler<HTMLElement>",
      "description": "The click handler for the menu item.",
      "detailedType": "React.MouseEventHandler<HTMLElement> | undefined"
    },
    "closeOnClick": {
      "type": "boolean",
      "default": "false",
      "description": "Whether to close the menu when the item is clicked.",
      "detailedType": "boolean | undefined"
    },
    "nativeButton": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the component renders a native `<button>` element when replacing it\nvia the `render` prop.\nSet to `true` if the rendered element is a native button.",
      "detailedType": "boolean | undefined"
    },
    "style": {
      "type": "CSSProperties | ((state: Menu.RadioItem.State) => CSSProperties | undefined)",
      "detailedType": "| React.CSSProperties\n| ((\n    state: Menu.RadioItem.State,\n  ) => CSSProperties | undefined)\n| undefined"
    },
    "disabled": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the component should ignore user interaction.",
      "detailedType": "boolean | undefined"
    },
    "id": {
      "type": "string",
      "detailedType": "string | undefined"
    },
    "className": {
      "type": "string | ((state: Menu.RadioItem.State) => string | undefined)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state.",
      "detailedType": "| string\n| ((state: Menu.RadioItem.State) => string | undefined)"
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: Menu.RadioItem.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: Menu.RadioItem.State,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {
    "data-checked": {
      "description": "Present when the menu radio item is selected."
    },
    "data-unchecked": {
      "description": "Present when the menu radio item is not selected."
    },
    "data-highlighted": {
      "description": "Present when the menu radio item is highlighted."
    },
    "data-disabled": {
      "description": "Present when the menu radio item is disabled."
    }
  },
  "cssVariables": {}
}
