{
  "name": "TooltipPopup",
  "description": "A container for the tooltip contents.\nRenders a `<div>` element.",
  "props": {
    "className": {
      "type": "string | ((state: Tooltip.Popup.State) => string)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: Tooltip.Popup.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    }
  },
  "dataAttributes": {
    "data-open": {
      "description": "Present when the tooltip is open."
    },
    "data-closed": {
      "description": "Present when the tooltip is closed."
    },
    "data-align": {
      "description": "Indicates how the popup is aligned relative to specified side.",
      "type": "'start' | 'center' | 'end'"
    },
    "data-instant": {
      "description": "Present if animations should be instant.",
      "type": "'delay' | 'dismiss' | 'focus'"
    },
    "data-side": {
      "description": "Indicates which side the popup is positioned relative to the trigger.",
      "type": "'top' | 'bottom' | 'left' | 'right' | 'inline-end' | 'inline-start'"
    },
    "data-starting-style": {
      "description": "Present when the tooltip is animating in."
    },
    "data-ending-style": {
      "description": "Present when the tooltip is animating out."
    }
  },
  "cssVariables": {}
}
