{
  "name": "SwitchRoot",
  "description": "The foundation for building custom-styled switches.",
  "props": {
    "checked": {
      "type": "boolean",
      "description": "If `true`, the switch is checked."
    },
    "className": {
      "type": "string | (state) => string",
      "description": "Class names applied to the element or a function that returns them based on the component's state."
    },
    "defaultChecked": {
      "type": "boolean",
      "default": "false",
      "description": "The default checked state. Use when the component is uncontrolled."
    },
    "disabled": {
      "type": "boolean",
      "default": "false",
      "description": "If `true`, the component is disabled and can't be interacted with."
    },
    "inputRef": {
      "type": "React.Ref",
      "description": "Ref to the underlying input element."
    },
    "name": {
      "type": "string",
      "description": "Name of the underlying input element."
    },
    "onCheckedChange": {
      "type": "(checked, event) => void",
      "description": "Callback fired when the checked state is changed."
    },
    "readOnly": {
      "type": "boolean",
      "default": "false",
      "description": "If `true`, the component is read-only.\nFunctionally, this is equivalent to being disabled, but the assistive technologies will announce this differently."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "A function to customize rendering of the component."
    },
    "required": {
      "type": "boolean",
      "default": "false",
      "description": "If `true`, the switch must be checked for the browser validation to pass."
    }
  }
}
