{
  "name": "MenuRoot",
  "description": "Groups all parts of the menu.\nDoesnâ€™t render its own HTML element.",
  "props": {
    "closeParentOnEsc": {
      "type": "boolean",
      "default": "true",
      "description": "Determines if pressing the Esc key closes the parent menus.\nThis is only applicable for nested menus.\n\nIf set to `false` pressing Esc closes only the current menu."
    },
    "defaultOpen": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the menu is initially open.\n\nTo render a controlled menu, use the `open` prop instead."
    },
    "delay": {
      "type": "number",
      "default": "100",
      "description": "The delay in milliseconds until the menu popup is opened when `openOnHover` is `true`."
    },
    "disabled": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the component should ignore user actions."
    },
    "loop": {
      "type": "boolean",
      "default": "true",
      "description": "Whether to loop keyboard focus back to the first item\nwhen the end of the list is reached while using the arrow keys."
    },
    "onOpenChange": {
      "type": "(open, event) => void",
      "description": "Event handler called when the menu is opened or closed."
    },
    "open": {
      "type": "boolean",
      "description": "Whether the menu is currently open."
    },
    "openOnHover": {
      "type": "boolean",
      "description": "Whether the menu popup opens when the trigger is hovered after the provided `delay`.\nBy default, `openOnHover` is set to `true` for nested menus."
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "default": "'vertical'",
      "description": "The orientation of the Menu (horizontal or vertical)."
    }
  }
}
