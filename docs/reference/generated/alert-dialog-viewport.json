{
  "name": "AlertDialogViewport",
  "description": "A scrollable container for the dialog popup.\nRenders a `<div>` element.",
  "props": {
    "className": {
      "type": "string | ((state: AlertDialog.Viewport.State) => string)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state.",
      "detailedType": "| string\n| ((state: AlertDialog.Viewport.State) => string)"
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: AlertDialog.Viewport.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: AlertDialog.Viewport.State,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {
    "data-open": {
      "description": "Present when the dialog is open."
    },
    "data-closed": {
      "description": "Present when the dialog is closed."
    },
    "data-nested": {
      "description": "Present when the dialog is nested within another dialog."
    },
    "data-nested-dialog-open": {
      "description": "Present when the dialog has other open dialogs nested within it."
    },
    "data-starting-style": {
      "description": "Present when the dialog is animating in."
    },
    "data-ending-style": {
      "description": "Present when the dialog is animating out."
    }
  },
  "cssVariables": {}
}
