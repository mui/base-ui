{
  "name": "SelectValue",
  "description": "A text label of the currently selected item.\nRenders a `<span>` element.",
  "props": {
    "children": {
      "type": "ReactNode | ((value: any) => ReactNode)",
      "description": "Accepts a function that returns a `ReactNode` to format the selected value.",
      "detailedType": "React.ReactNode | ((value: any) => ReactNode)"
    },
    "className": {
      "type": "string | ((state: SelectValueState) => string)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: SelectValueState) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: SelectValueState,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {},
  "cssVariables": {}
}
