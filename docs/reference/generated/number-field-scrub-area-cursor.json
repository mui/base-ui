{
  "name": "NumberFieldScrubAreaCursor",
  "description": "A custom element to display instead of the native cursor while using the scrub area.\nRenders a `<span>` element.\n\nThis component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\nin Safari to avoid a layout shift that this notification causes there.",
  "props": {
    "className": {
      "type": "string | (state) => string",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    }
  },
  "dataAttributes": {
    "data-disabled": {
      "description": "Present when the number field is disabled."
    },
    "data-readonly": {
      "description": "Present when the number field is readonly."
    },
    "data-required": {
      "description": "Present when the number field is required."
    },
    "data-valid": {
      "description": "Present when the number field is in valid state (when wrapped in Field.Root).."
    },
    "data-invalid": {
      "description": "Present when the number field is in invalid state (when wrapped in Field.Root)."
    },
    "data-dirty": {
      "description": "Present when the number field's value has changed (when wrapped in Field.Root)."
    },
    "data-touched": {
      "description": "Present when the number field has been thouched (when wrapped in Field.Root)."
    },
    "data-scrubbing": {
      "description": "Present while scrubbing."
    }
  },
  "cssVariables": {}
}
