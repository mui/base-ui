{
  "name": "TabsRoot",
  "description": "Groups the tabs and the corresponding panels.\nRenders a `<div>` element.",
  "props": {
    "defaultValue": {
      "type": "any",
      "default": "0",
      "description": "The default value. Use when the component is not controlled.\nWhen the value is `null`, no Tab will be selected."
    },
    "value": {
      "type": "any",
      "description": "The value of the currently selected `Tab`. Use when the component is controlled.\nWhen the value is `null`, no Tab will be selected."
    },
    "onValueChange": {
      "type": "(value, event) => void",
      "description": "Callback invoked when new value is being set."
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "default": "'horizontal'",
      "description": "The component orientation (layout flow direction)."
    },
    "className": {
      "type": "string | (state) => string",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    }
  },
  "dataAttributes": {
    "data-orientation": {
      "description": "Indicates the orientation of the tabs.",
      "type": "'horizontal' | 'vertical'"
    },
    "data-activation-direction": {
      "description": "Indicates the direction of the activation (based on the previous selected tab).",
      "type": "'left' | 'right' | 'up' | 'down' | 'none'"
    }
  },
  "cssVariables": {}
}
