{
  "name": "AccordionPanel",
  "description": "A collapsible panel with the accordion item contents.\nRenders a `<div>` element.",
  "props": {
    "hiddenUntilFound": {
      "type": "boolean",
      "default": "false",
      "description": "Allows the browser’s built-in page search to find and expand the panel contents.\n\nOverrides the `keepMounted` prop and uses `hidden=\"until-found\"`\nto hide the element without removing it from the DOM."
    },
    "className": {
      "type": "string | (state) => string",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "keepMounted": {
      "type": "boolean",
      "default": "false",
      "description": "Whether to keep the element in the DOM while the panel is closed.\nThis prop is ignored when `hiddenUntilFound` is used."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    }
  },
  "dataAttributes": {
    "data-open": {
      "description": "Present when the accordion panel is open."
    },
    "data-disabled": {
      "description": "Present when the accordion item is disabled."
    },
    "data-index": {
      "description": "Indicates the index of the accordion item.",
      "type": "number"
    },
    "data-starting-style": {
      "description": "Present when the panel is animating in."
    },
    "data-ending-style": {
      "description": "Present when the panel is animating out."
    }
  },
  "cssVariables": {}
}
