{
  "name": "PreviewCardPopup",
  "description": "A container for the preview card contents.\nRenders a `<div>` element.",
  "props": {
    "style": {
      "type": "CSSProperties | ((state: PreviewCard.Popup.State) => CSSProperties | undefined)",
      "detailedType": "| React.CSSProperties\n| ((\n    state: PreviewCard.Popup.State,\n  ) => CSSProperties | undefined)\n| undefined"
    },
    "className": {
      "type": "string | ((state: PreviewCard.Popup.State) => string | undefined)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state.",
      "detailedType": "| string\n| ((state: PreviewCard.Popup.State) => string | undefined)"
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: PreviewCard.Popup.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: PreviewCard.Popup.State,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {
    "data-open": {
      "description": "Present when the preview card is open."
    },
    "data-closed": {
      "description": "Present when the preview card is closed."
    },
    "data-align": {
      "description": "Indicates how the popup is aligned relative to specified side.",
      "type": "'start' | 'center' | 'end'"
    },
    "data-side": {
      "description": "Indicates which side the popup is positioned relative to the trigger.",
      "type": "'top' | 'bottom' | 'left' | 'right' | 'inline-end' | 'inline-start'"
    },
    "data-starting-style": {
      "description": "Present when the preview card is animating in."
    },
    "data-ending-style": {
      "description": "Present when the preview card is animating out."
    }
  },
  "cssVariables": {}
}
