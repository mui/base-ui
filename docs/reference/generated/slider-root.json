{
  "name": "SliderRoot",
  "description": "",
  "props": {
    "aria-labelledby": {
      "type": "string",
      "description": "Identifies the element (or elements) that labels the current element."
    },
    "className": {
      "type": "string | (state) => string",
      "description": "Class names applied to the element or a function that returns them based on the component's state."
    },
    "defaultValue": {
      "type": "Array<number> | number",
      "description": "The default value of the slider. Use when the component is not controlled."
    },
    "disabled": {
      "type": "boolean",
      "default": "false",
      "description": "If `true`, the component is disabled."
    },
    "largeStep": {
      "type": "number",
      "default": "10",
      "description": "The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down."
    },
    "max": {
      "type": "number",
      "default": "100",
      "description": "The maximum allowed value of the slider.\nShould not be equal to min."
    },
    "min": {
      "type": "number",
      "default": "0",
      "description": "The minimum allowed value of the slider.\nShould not be equal to max."
    },
    "minStepsBetweenValues": {
      "type": "number",
      "default": "0",
      "description": "The minimum steps between values in a range slider."
    },
    "name": {
      "type": "string",
      "description": "Name attribute of the hidden `input` element."
    },
    "onValueChange": {
      "type": "(value, event, activeThumbIndex) => void",
      "description": "Callback function that is fired when the slider's value changed."
    },
    "onValueCommitted": {
      "type": "(value, event) => void",
      "description": "Callback function that is fired when the `pointerup` is triggered."
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "default": "'horizontal'",
      "description": "The component orientation."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "A function to customize rendering of the component."
    },
    "step": {
      "type": "number",
      "default": "1",
      "description": "The granularity with which the slider can step through values. (A \"discrete\" slider.)\nThe `min` prop serves as the origin for the valid values.\nWe recommend (max - min) to be evenly divisible by the step."
    },
    "value": {
      "type": "Array<number> | number",
      "description": "The value of the slider.\nFor ranged sliders, provide an array with two values."
    }
  }
}
