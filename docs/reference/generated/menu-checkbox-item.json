{
  "name": "MenuCheckboxItem",
  "description": "A menu item that toggles a setting on or off.\nRenders a `<div>` element.",
  "props": {
    "label": {
      "type": "string",
      "description": "Overrides the text label to use when the item is matched during keyboard text navigation."
    },
    "defaultChecked": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the checkbox item is initially ticked.\n\nTo render a controlled checkbox item, use the `checked` prop instead."
    },
    "checked": {
      "type": "boolean",
      "description": "Whether the checkbox item is currently ticked.\n\nTo render an uncontrolled checkbox item, use the `defaultChecked` prop instead."
    },
    "onCheckedChange": {
      "type": "(checked, event) => void",
      "description": "Event handler called when the checkbox item is ticked or unticked."
    },
    "onClick": {
      "type": "(event) => void",
      "description": "The click handler for the menu item."
    },
    "closeOnClick": {
      "type": "boolean",
      "default": "false",
      "description": "Whether to close the menu when the item is clicked."
    },
    "disabled": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the component should ignore user interaction."
    },
    "className": {
      "type": "string | (state) => string",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    }
  },
  "dataAttributes": {
    "data-checked": {
      "description": "Present when the menu checkbox item is checked."
    },
    "data-unchecked": {
      "description": "Present when the menu checkbox item is not checked."
    }
  },
  "cssVariables": {}
}
