{
  "name": "TooltipTrigger",
  "description": "An element to attach the tooltip to.\nRenders a `<button>` element.",
  "props": {
    "handle": {
      "type": "TooltipHandle<Payload>",
      "description": "A handle to associate the trigger with a tooltip.",
      "detailedType": "{} | undefined"
    },
    "payload": {
      "type": "Payload",
      "description": "A payload to pass to the tooltip when it is opened.",
      "detailedType": "Payload | undefined"
    },
    "style": {
      "type": "CSSProperties | ((state: Tooltip.Trigger.State) => CSSProperties | undefined)",
      "detailedType": "| React.CSSProperties\n| ((\n    state: Tooltip.Trigger.State,\n  ) => CSSProperties | undefined)\n| undefined"
    },
    "delay": {
      "type": "number",
      "default": "600",
      "description": "How long to wait before opening the tooltip. Specified in milliseconds.",
      "detailedType": "number | undefined"
    },
    "closeDelay": {
      "type": "number",
      "default": "0",
      "description": "How long to wait before closing the tooltip. Specified in milliseconds.",
      "detailedType": "number | undefined"
    },
    "className": {
      "type": "string | ((state: Tooltip.Trigger.State) => string | undefined)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state.",
      "detailedType": "| string\n| ((state: Tooltip.Trigger.State) => string | undefined)"
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: Tooltip.Trigger.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: Tooltip.Trigger.State,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {
    "data-popup-open": {
      "description": "Present when the corresponding tooltip is open."
    }
  },
  "cssVariables": {}
}
