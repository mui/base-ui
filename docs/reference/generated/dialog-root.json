{
  "name": "DialogRoot",
  "description": "Groups all parts of the dialog.\nDoesnâ€™t render its own HTML element.",
  "props": {
    "defaultOpen": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the dialog is initially open.\n\nTo render a controlled dialog, use the `open` prop instead."
    },
    "open": {
      "type": "boolean",
      "description": "Whether the dialog is currently open."
    },
    "onOpenChange": {
      "type": "((open: boolean, event: Event | undefined, reason: \"click\" | \"hover\" | \"focus\" | \"focus-out\" | \"escape-key\" | \"outside-press\" | \"trigger-press\" | undefined) => void)",
      "description": "Event handler called when the dialog is opened or closed."
    },
    "actionsRef": {
      "type": "RefObject",
      "description": "A ref to imperative actions."
    },
    "dismissible": {
      "type": "boolean",
      "default": "true",
      "description": "Determines whether the dialog should close on outside clicks."
    },
    "modal": {
      "type": "boolean",
      "default": "true",
      "description": "Whether the dialog should prevent outside clicks and lock page scroll when open."
    },
    "onOpenChangeComplete": {
      "type": "((open: boolean) => void)",
      "description": "Event handler called after any animations complete when the dialog is opened or closed."
    },
    "children": {
      "type": "ReactNode"
    }
  },
  "dataAttributes": {},
  "cssVariables": {}
}
