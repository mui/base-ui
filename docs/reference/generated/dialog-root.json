{
  "name": "DialogRoot",
  "description": "Groups all parts of the dialog.\nDoesnâ€™t render its own HTML element.",
  "props": {
    "defaultOpen": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the dialog is initially open.\n\nTo render a controlled dialog, use the `open` prop instead."
    },
    "open": {
      "type": "boolean",
      "description": "Whether the dialog is currently open."
    },
    "onOpenChange": {
      "type": "(open, event, reason) => void",
      "description": "Event handler called when the dialog is opened or closed."
    },
    "actionsRef": {
      "type": "{ current: { unmount: func } }",
      "description": "A ref to imperative actions."
    },
    "dismissible": {
      "type": "boolean",
      "default": "true",
      "description": "Determines whether the dialog should close on outside clicks."
    },
    "onOpenChangeComplete": {
      "type": "(open) => void",
      "description": "Event handler called after any animations complete when the dialog is opened or closed."
    },
    "trap": {
      "type": "'all' | 'focus' | 'none'",
      "default": "'all'",
      "description": "How the dialog should trap user interactions.\n- `all`: trap all interactions (focus, scroll, pointer) inside the dialog.\n- `none`: don't trap any interactions.\n- `focus`: only trap focus inside the dialog.\n\nTrapping focus means that tabbing is only allowed inside the dialog.\n\nTrapping scroll means that scrolling is only allowed inside the dialog, locking outer page scroll.\n\nTrapping pointer means that pointer interactions are only allowed inside the dialog, preventing clicks on elements outside the dialog."
    }
  },
  "dataAttributes": {},
  "cssVariables": {}
}
