{
  "name": "ScrollAreaViewport",
  "description": "The actual scrollable container of the scroll area.\nRenders a `<div>` element.",
  "props": {
    "className": {
      "type": "string | ((state: ScrollArea.Viewport.State) => string)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state.",
      "detailedType": "| string\n| ((state: ScrollArea.Viewport.State) => string)"
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: ScrollArea.Viewport.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: ScrollArea.Viewport.State,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {
    "data-has-overflow-x": {
      "description": "Present when the scroll area content is wider than the viewport."
    },
    "data-has-overflow-y": {
      "description": "Present when the scroll area content is taller than the viewport."
    },
    "data-overflow-x-end": {
      "description": "Present when there is overflow on the horizontal end side."
    },
    "data-overflow-x-start": {
      "description": "Present when there is overflow on the horizontal start side."
    },
    "data-overflow-y-end": {
      "description": "Present when there is overflow on the vertical end side."
    },
    "data-overflow-y-start": {
      "description": "Present when there is overflow on the vertical start side."
    }
  },
  "cssVariables": {}
}
