{
  "name": "CollapsibleRoot",
  "description": "Groups all parts of the collapsible.\nRenders a `<div>` element.",
  "props": {
    "defaultOpen": {
      "type": "boolean",
      "expanded": "boolean | undefined",
      "default": "false",
      "description": "Whether the collapsible panel is initially open.\n\nTo render a controlled collapsible, use the `open` prop instead."
    },
    "open": {
      "type": "boolean",
      "expanded": "boolean | undefined",
      "description": "Whether the collapsible panel is currently open.\n\nTo render an uncontrolled collapsible, use the `defaultOpen` prop instead."
    },
    "onOpenChange": {
      "type": "((open: boolean) => void)",
      "expanded": "((open: boolean) => void) | undefined",
      "description": "Event handler called when the panel is opened or closed."
    },
    "disabled": {
      "type": "boolean",
      "expanded": "boolean | undefined",
      "default": "false",
      "description": "Whether the component should ignore user interaction."
    },
    "className": {
      "type": "string | ((state: Collapsible.Root.State) => string)",
      "expanded": "| string\n| ((state: Collapsible.Root.State) => string)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the componentâ€™s state."
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: Collapsible.Root.State) => ReactElement) | null",
      "expanded": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: Collapsible.Root.State,\n  ) => ReactElement)\n| null"
    }
  },
  "dataAttributes": {},
  "cssVariables": {}
}
