{
  "name": "SelectItem",
  "description": "An individual option in the select menu.\nRenders a `<div>` element.",
  "props": {
    "label": {
      "type": "string",
      "description": "Specifies the text label to use when the item is matched during keyboard text navigation.\n\nDefaults to the item text content if not provided.",
      "detailedType": "string | undefined"
    },
    "value": {
      "type": "any",
      "default": "null",
      "description": "A unique value that identifies this select item."
    },
    "nativeButton": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the component renders a native `<button>` element when replacing it\nvia the `render` prop.\nSet to `true` if the rendered element is a native button.",
      "detailedType": "boolean | undefined"
    },
    "disabled": {
      "type": "boolean",
      "default": "false",
      "description": "Whether the component should ignore user interaction.",
      "detailedType": "boolean | undefined"
    },
    "children": {
      "type": "ReactNode",
      "detailedType": "React.ReactNode"
    },
    "className": {
      "type": "string | ((state: Select.Item.State) => string)",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "ReactElement | ((props: HTMLProps, state: Select.Item.State) => ReactElement)",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.",
      "detailedType": "| ReactElement\n| ((\n    props: HTMLProps,\n    state: Select.Item.State,\n  ) => ReactElement)"
    }
  },
  "dataAttributes": {
    "data-selected": {
      "description": "Present when the select item is selected."
    },
    "data-highlighted": {
      "description": "Present when the select item is highlighted."
    },
    "data-disabled": {
      "description": "Present when the select item is disabled."
    }
  },
  "cssVariables": {}
}
