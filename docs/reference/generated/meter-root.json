{
  "name": "MeterRoot",
  "description": "Groups all parts of the meter and provides the value for screen readers.\nRenders a `<div>` element.",
  "props": {
    "value": {
      "type": "number",
      "required": true,
      "description": "The current value."
    },
    "getAriaValueText": {
      "type": "(formattedValue, value) => string",
      "description": "A function that returns a string value that provides a human-readable text alternative for the current value of the meter."
    },
    "locale": {
      "type": "Intl.LocalesArgument",
      "description": "The locale used by `Intl.NumberFormat` when formatting the value.\nDefaults to the user's runtime locale."
    },
    "min": {
      "type": "number",
      "default": "0",
      "description": "The minimum value"
    },
    "max": {
      "type": "number",
      "default": "100",
      "description": "The maximum value"
    },
    "format": {
      "type": "Intl.NumberFormatOptions",
      "description": "Options to format the value."
    },
    "className": {
      "type": "string | (state) => string",
      "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
    }
  },
  "dataAttributes": {},
  "cssVariables": {}
}
