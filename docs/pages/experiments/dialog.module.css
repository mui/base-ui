@keyframes dialog-opening {
  to {
    opacity: 1;
    visibility: visible;
  }
}

@keyframes dialog-closing {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes backdrop-opening {
  from {
    backdrop-filter: blur(1px);
    opacity: 0;
  }

  to {
    backdrop-filter: blur(6px);
    opacity: 1;
    visibility: visible;
  }
}

@keyframes backdrop-closing {
  from {
    opacity: 1;
    backdrop-filter: blur(6px);
  }

  to {
    backdrop-filter: blur(1px);
    opacity: 0;
    visibility: hidden;
  }
}

.dialog {
  background: #fff;
  border: 1px solid #f5f5f5;
  min-width: 300px;
  max-width: 500px;
  border-radius: 4px;
  box-shadow: rgba(0, 0, 0, 0.2) 0px 18px 50px -10px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 16px;
  z-index: 1;
  font-family: IBM Plex Sans;

  &.withTransitions {
    visibility: hidden;
    opacity: 0;
    transition:
      opacity 0.5s ease-in-out,
      visibility 0.5s step-end;

    &[data-state='open'] {
      @starting-style {
        & {
          opacity: 0;
        }
      }

      visibility: visible;
      opacity: 1;
      transition:
        opacity 0.3s ease-in-out,
        visibility 0.3s step-start;
    }
  }

  &.withAnimations {
    opacity: 0;
    &[data-state='open'] {
      animation: dialog-opening 0.8s ease-out both;
    }

    &[data-state='closed'] {
      animation: dialog-closing 0.8s ease-in both;
    }
  }

  &.withReactSpringTransition {
    top: 50vh;
    left: 50vw;
    visibility: visible;
    opacity: 1;
  }
}

.backdrop {
  background: radial-gradient(#cecdcf36, #8b94ab47);
  z-index: 0;
  position: fixed;
  inset: 0;

  &.withTransitions {
    opacity: 0;
    visibility: hidden;
    backdrop-filter: blur(1px);
    transition:
      backdrop-filter 1s ease-in,
      opacity 1s ease-in,
      visibility 1s step-end;

    &[data-state='open'] {
      @starting-style {
        & {
          opacity: 0;
          backdrop-filter: blur(1px);
        }
      }

      backdrop-filter: blur(6px);
      opacity: 1;
      visibility: visible;
      transition:
        backdrop-filter 2s ease-out,
        opacity 0.3s ease-out;
    }
  }

  &.withAnimations {
    &[data-state='open'] {
      animation: backdrop-opening 1s ease-out forwards;
    }

    &[data-state='closed'] {
      animation: backdrop-closing 1s ease-in forwards;
    }
  }
}

.title {
  font-size: 1.5rem;
  font-weight: 600;
}

.page {
  max-width: 1000px;
  margin: 0 auto;
  padding: 16px;
  font-family: IBM Plex Sans;

  h1 {
    font-family: General Sans;
    font-weight: 600;
    font-size: 2rem;
  }

  h2 {
    font-size: 1.5rem;
    font-weight: 600;
  }

  label {
    font-size: 0.8333rem;
  }

  label + label {
    margin-left: 16px;
  }
}

.springWrapper {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

.button {
  background: #eee;
  padding: 8px 16px;
  border: 1px solid #d8d8d8;
  border-radius: 4px;
  font-family: inherit;

  &:hover {
    background: #ffbf2b;
  }

  &:focus-visible {
    outline: 2px solid #ffbf2b;
  }

  &:active {
    background: #cc9922;
    border-color: #cc9922;

    &:focus-visible {
      outline-color: #cc9922;
    }
  }
}

.form {
  display: flex;
  gap: 16px;
  margin-top: 24px;
  flex-wrap: wrap;

  input[type='text'],
  textarea {
    padding: 8px;
    border: 1px solid #d8d8d8;
    border-radius: 4px;
    font-family: inherit;
    box-sizing: border-box;
  }

  textarea {
    resize: vertical;
    min-height: 100px;
    width: 100%;
  }

  & > * {
    flex: 1 0 auto;
    margin: 0;
  }
}

.controls {
  display: flex;
  gap: 16px;
  margin-top: 16px;
  border-top: 1px solid #d8d8d8;
  padding-top: 16px;

  & > * {
    flex: 1 1 50%;
    margin: 0;
  }
}

.demo {
  margin-right: 8px;
}
