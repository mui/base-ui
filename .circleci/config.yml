version: 2.1

orbs:
  code-infra: https://raw.githubusercontent.com/mui/mui-public/refs/heads/ci-orb/.circleci/orbs/code-infra.yaml

parameters:
  browserstack-force:
    description: Whether to force browserstack usage. We have limited resources on browserstack so the pipeline might decide to skip browserstack if this parameter isn't set to true.
    type: boolean
    default: false
  react-version:
    description: The version of react to be used
    type: string
    default: stable
  workflow:
    description: The name of the workflow to run
    type: string
    default: pipeline

default-job: &default-job
  parameters:
    react-version:
      description: The version of react to be used
      type: string
      default: << pipeline.parameters.react-version >>
  environment:
    # expose it globally otherwise we have to thread it from each job to the install command
    BROWSERSTACK_FORCE: << pipeline.parameters.browserstack-force >>
    REACT_VERSION: << parameters.react-version >>
    COREPACK_ENABLE_DOWNLOAD_PROMPT: '0'
  working_directory: /tmp/base-ui
  docker:
    - image: cimg/node:22.18

default-context: &default-context
  context:
    - org-global

# CircleCI has disabled the cache across forks for security reasons.
# Following their official statement, it was a quick solution, they
# are working on providing this feature back with appropriate security measures.
# https://discuss.circleci.com/t/saving-cache-stopped-working-warning-skipping-this-step-disabled-in-configuration/24423/21
#
# restore_repo: &restore_repo
#   restore_cache:
#     key: v1-repo-{{ .Branch }}-{{ .Revision }}

jobs:
  test_unit:
    <<: *default-job
    steps:
      - checkout
      - code-infra/install-deps:
          package-overrides: react@<< parameters.react-version >>
      - run:
          name: Run tests on JSDOM
          command: pnpm test:jsdom:coverage
      - code-infra/upload-coverage:
          key: jsdom
  test_lint:
    <<: *default-job
    steps:
      - checkout
      - code-infra/install-deps
      - code-infra/run-linters
  test_static:
    <<: *default-job
    steps:
      - checkout
      - code-infra/install-deps
      - code-infra/check-static-changes
      - run:
          name: Generate the documentation
          command: pnpm docs:api
      - run:
          name: '`pnpm docs:api` changes committed?'
          command: git add -A && git diff --exit-code --staged
      - run:
          name: '`pnpm extract-error-codes` changes committed?'
          command: |
            pnpm extract-error-codes
            git add -A && git diff --exit-code --staged
      - run:
          name: '`pnpm docs:link-check` changes committed?'
          command: |
            pnpm docs:link-check
            git add -A && git diff --exit-code --staged
      - run:
          name: '`pnpm inline-scripts` changes committed?'
          command: |
            pnpm inline-scripts
            git add -A && git diff --exit-code --staged
  test_types:
    <<: *default-job
    resource_class: 'medium+'
    steps:
      - checkout
      - code-infra/install-deps:
          package-overrides: react@<< parameters.react-version >>
      - run:
          name: Tests TypeScript definitions
          command: pnpm typescript
          environment:
            NODE_OPTIONS: --max-old-space-size=3072
      - run:
          name: Any defect declaration files?
          command: pnpm code-infra validate-built-types
      - save_cache:
          name: Save generated declaration files
          key: typescript-declaration-files-{{ .Branch }}-{{ .Revision }}
          paths:
            # packages with generated declaration files
            - packages/react/build
  test_types_next:
    <<: *default-job
    resource_class: 'medium+'
    steps:
      - checkout
      - code-infra/install-deps:
          package-overrides: typescript@next
      - run:
          name: Tests TypeScript definitions
          command: pnpm typescript
      - restore_cache:
          name: Restore generated declaration files
          keys:
            # We assume that the target branch is `master` and that declaration files are persisted in commit order.
            # "If there are multiple matches, the most recently generated cache will be used."
            - typescript-declaration-files-master
      - run:
          name: Log defect declaration files
          command: |
            # ignore build failures
            # Fixing these takes some effort that isn't viable to merge in a single PR.
            # We'll simply monitor them for now.
            set +e
            pnpm code-infra validate-built-types
            exit 0
  test_browser:
    <<: *default-job
    resource_class: 'medium+'
    docker:
      - image: mcr.microsoft.com/playwright:v1.56.1-noble
    steps:
      - checkout
      - code-infra/install-deps:
          package-overrides: react@<< parameters.react-version >>
          browsers: true
      - run:
          name: Run tests on headless Chromium
          command: pnpm test:chromium --coverage
      - code-infra/upload-coverage:
          key: browser
  test_regressions:
    <<: *default-job
    docker:
      - image: mcr.microsoft.com/playwright:v1.56.1-noble
    steps:
      - checkout
      - code-infra/install-deps:
          browsers: true
      - run:
          name: Run visual regression tests
          command: xvfb-run pnpm test:regressions
      - run:
          name: Upload screenshots to Argos CI
          command: pnpm test:argos
  test_e2e:
    <<: *default-job
    docker:
      - image: mcr.microsoft.com/playwright:v1.56.1-noble
    steps:
      - checkout
      - code-infra/install-deps:
          browsers: true
      - run:
          name: pnpm test:e2e
          command: pnpm test:e2e

  test_package:
    <<: *default-job
    steps:
      - checkout
      - code-infra/install-deps
      - code-infra/test-package
      - run:
          name: Check public types
          command: pnpm -r run release:test
      - run:
          name: Test Node.js module resolution
          command: pnpm -F @base-ui/test-node-resolution test

workflows:
  pipeline:
    when:
      equal: [pipeline, << pipeline.parameters.workflow >>]
    jobs:
      - test_unit:
          <<: *default-context
          name: 'JSDOM tests'
      - test_lint:
          <<: *default-context
          name: 'Linting'
      - test_static:
          <<: *default-context
          name: 'Generated files verification'
      - test_types:
          <<: *default-context
          name: 'Typechecking'
      - test_browser:
          <<: *default-context
          name: 'Browser tests'
      - test_regressions:
          <<: *default-context
          name: 'Regression tests'
      - test_e2e:
          <<: *default-context
          name: 'E2E tests'
      - test_package:
          <<: *default-context
          name: 'Package verification'
  react-18:
    when:
      equal: [pipeline, << pipeline.parameters.workflow >>]
    jobs:
      - test_unit:
          <<: *default-context
          name: 'JSDOM tests (React 18)'
          react-version: '^18'
      - test_browser:
          <<: *default-context
          name: 'Browser tests (React 18)'
          react-version: '^18'
      - test_types:
          <<: *default-context
          name: 'Typechecking (React 18)'
          react-version: '^18'
  typescript-next:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - test_types_next:
          <<: *default-context
          name: 'Typechecking (typescript@next)'
